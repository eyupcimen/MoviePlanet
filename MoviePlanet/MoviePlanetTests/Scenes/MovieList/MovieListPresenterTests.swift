//
//  MovieListPresenterTests.swift
//  MoviePlanet
//
//  Created by eyup cimen on 25.09.2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import MoviePlanet
import XCTest

class MovieListPresenterTests: XCTestCase {
    var sut: MovieListPresenter!
    
    override func setUp() {
        super.setUp()
        setupMovieListPresenter()
    }
    
    override func tearDown() {
        super.tearDown()
    }
    
    func setupMovieListPresenter() {
        sut = MovieListPresenter()
    }
    
    class MovieListDisplayLogicSpy: MovieListDisplayLogic {
        
        var displayUpcomingMoviesCalled = false
        var viewModel: ListMovies.FetchMovies.ViewModel!
        
        func displayMovies(viewModel: ListMovies.FetchMovies.ViewModel) {
            displayUpcomingMoviesCalled = true
            self.viewModel = viewModel
        }
        
        func displaySliderMovies(viewModel: ListMovies.FetchSlidersMovies.ViewModel) {
            
        }
        
        func displaySearchMovies(viewModel: ListMovies.FetchSearchMovies.ViewModel) {
            
        }
    }
     
    func testPresentSomething() {
        // Given
        let spy = MovieListDisplayLogicSpy()
        sut.viewController = spy
        let response = ListMovies.FetchMovies.Response(movies: [Seeds.Movies.movie1, Seeds.Movies.movie3])
        // When
        sut.presentFetchedMovies(response: response)
        // Then
        XCTAssertTrue(spy.displayUpcomingMoviesCalled, "presentFetchedMovies(response:) should ask the view controller to display the result")
    }
}
