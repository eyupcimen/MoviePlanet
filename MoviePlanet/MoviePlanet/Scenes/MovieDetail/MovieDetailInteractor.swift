//
//  MovieDetailInteractor.swift
//  MoviePlanet
//
//  Created by eyup cimen on 25.09.2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MovieDetailBusinessLogic {
    func getMovieDetail(request: MovieDetail.Detail.Request)
    func getSimilarMovies(request: MovieDetail.SimilarMovies.Request)
}

protocol MovieDetailDataStore {
    var movieId : Int? {set get}
    var movie : Movie? {set get}
    var movies : [Movie]? {get}
}

class MovieDetailInteractor: MovieDetailBusinessLogic, MovieDetailDataStore {
    var presenter: MovieDetailPresentationLogic?
    var worker = MovieWorker(moviesStore: MoviesMemStore())
    var movie: Movie?
    var movieId: Int?
    var movies: [Movie]?
    
    func getMovieDetail(request: MovieDetail.Detail.Request) {
        worker.getMovieDetail(movieId: request.movieId) { (movie) in
            self.movie = movie
            let response = MovieDetail.Detail.Response(movie: movie)
            self.presenter?.presentMovieDetail(response: response)
        }
    }
    
    func getSimilarMovies(request: MovieDetail.SimilarMovies.Request) {
        worker.getSimilarMovies(movieId: request.movieId) { (movies) in
            self.movies = movies
            let response = MovieDetail.SimilarMovies.Response(movies: movies)
            self.presenter?.presentSimilarMovies(response: response)
        }
    }
}
